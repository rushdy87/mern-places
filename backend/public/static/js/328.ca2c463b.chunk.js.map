{"version":3,"file":"static/js/328.ca2c463b.chunk.js","mappings":"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","sources":["places/pages/NewPlace/NewPlace.jsx","places/pages/UpdatePlace/UpdatePlace.jsx","places/components/PlaceItem/PlaceItem.jsx","places/components/PlaceList/PlaceList.jsx","places/pages/UserPlaces/UserPlaces.jsx","shared/components/FormElements/Input/Input.jsx","shared/components/ImageUpload/ImageUpload.jsx","shared/util/validators.js"],"sourcesContent":["import { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Input, Button } from '../../../shared/components/FormElements';\nimport ImageUpload from '../../../shared/components/ImageUpload/ImageUpload';\nimport {\n  LoadingSpinner,\n  ErrorModal,\n} from '../../../shared/components/UIElements';\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../../shared/util/validators';\nimport { useForm, useHttpClient } from '../../../shared/hooks';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport '../placeForm.css';\n\nconst NewPlace = () => {\n  const navigate = useNavigate();\n\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n      address: {\n        value: '',\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n  const { sendRequest, isLoading, error, clearError } = useHttpClient();\n\n  const { token } = useContext(AuthContext);\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('image', formState.inputs.image.value);\n\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places`,\n        'POST',\n        formData,\n        {\n          Authorization: `Bearer ${token}`,\n        }\n      );\n      navigate('/');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className='place-form' onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id='title'\n          element='input'\n          type='text'\n          label='Title'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Please enter a valid title.'\n          onInput={inputHandler}\n        />\n        <Input\n          id='description'\n          element='textarea'\n          label='Description'\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText='Please enter a valid description (at least 5 characters).'\n          onInput={inputHandler}\n        />\n        <Input\n          id='address'\n          element='input'\n          label='Address'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Please enter a valid address.'\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id='image'\n          onInput={inputHandler}\n          errorText='Please provied an image.'\n        />\n        <Button type='submit' disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default NewPlace;\n","import { useEffect, useState, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Button, Input } from '../../../shared/components/FormElements';\nimport { Card } from '../../../shared/components/UIElements';\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../../shared/util/validators';\nimport { useForm, useHttpClient } from '../../../shared/hooks';\nimport {\n  ErrorModal,\n  LoadingSpinner,\n} from '../../../shared/components/UIElements';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport '../placeForm.css';\n\nconst UpdatePlace = () => {\n  const [loadedPlace, setLoadedPlace] = useState();\n  const navigate = useNavigate();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const placeId = useParams().placeId;\n\n  const { userId, token } = useContext(AuthContext);\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const { place } = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n        );\n        setLoadedPlace(place);\n        setFormData(\n          {\n            title: {\n              value: place.title,\n              isValid: true,\n            },\n            description: {\n              value: place.description,\n              isValid: true,\n            },\n          },\n          true\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        }\n      );\n      navigate(`/${userId}/place`);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className='center'>\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading ? (\n        <LoadingSpinner asOverlay />\n      ) : (\n        <form className='place-form' onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id='title'\n            element='input'\n            type='text'\n            label='Title'\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText='Please enter a valid title.'\n            onInput={inputHandler}\n            initialValue={formState.inputs.title.value}\n            initialValid={formState.inputs.title.isValid}\n          />\n          <Input\n            id='description'\n            element='textarea'\n            label='Description'\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText='Please enter a valid description (min. 5 characters).'\n            onInput={inputHandler}\n            initialValue={formState.inputs.description.value}\n            initialValid={formState.inputs.description.isValid}\n          />\n          <Button type='submit' disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </>\n  );\n};\n\nexport default UpdatePlace;\n","import { useState, useContext } from 'react';\n\nimport { Button } from '../../../shared/components/FormElements';\nimport {\n  Card,\n  Map,\n  Modal,\n  ErrorModal,\n  LoadingSpinner,\n} from '../../../shared/components/UIElements/';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport { useHttpClient } from '../../../shared/hooks';\nimport './PlaceItem.css';\n\nconst PlaceItem = (props) => {\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const { userId, token } = useContext(AuthContext);\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWorningHandler = () => setShowConfirmModal(true);\n  const cancelDeleteWorningHandler = () => setShowConfirmModal(false);\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n        'DELETE',\n        null,\n        { Authorization: `Bearer ${token}` }\n      );\n      props.onDelete(props.id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass='place-item__modal-content'\n        footerClass='place-item__modal-actions'\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className='map-container'>\n          <Map\n            style={{ background: 'black' }}\n            center={props.coordinates}\n            zoom={16}\n          />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteWorningHandler}\n        header='Are you sure?'\n        footerClass='place-item__modal-actions'\n        footer={\n          <>\n            <Button inverse onClick={cancelDeleteWorningHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </>\n        }\n      >\n        <p>\n          Do you want to proced and delete this place? Please note it can be\n          undone there after.\n        </p>\n      </Modal>\n      <li className='place-item'>\n        <Card className='place-item__content'>\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className='place-item__image'>\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className='place-item__info'>\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className='place-item__actions'>\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n            {userId === props.creatorId && (\n              <Button danger onClick={showDeleteWorningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </>\n  );\n};\n\nexport default PlaceItem;\n","import { Button } from '../../../shared/components/FormElements';\nimport { Card } from '../../../shared/components/UIElements';\nimport PlaceItem from '../PlaceItem/PlaceItem';\nimport './PlaceList.css';\n\nconst PlaceList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className='place-list center'>\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to='/places/new'>Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className='place-list'>\n      {props.items.map((place) => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PlaceList from '../../components/PlaceList/PlaceList';\nimport { useHttpClient } from '../../../shared/hooks';\nimport {\n  ErrorModal,\n  LoadingSpinner,\n} from '../../../shared/components/UIElements';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState([]);\n  const { userId } = useParams();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const { places } = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n\n        setLoadedPlaces(places.filter((place) => place.creator === userId));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = (deletedPlaceId) => {\n    setLoadedPlaces((prevPlaces) =>\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading ? (\n        <LoadingSpinner asOverlay />\n      ) : (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </>\n  );\n};\n\nexport default UserPlaces;\n","import { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case 'TOUCH':\n      return { ...state, isTouched: true };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { onInput, id } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [onInput, id, value, isValid]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH',\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useState, useEffect, useRef } from 'react';\nimport { Button } from '../FormElements';\nimport './ImageUpload.css';\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState('');\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) return;\n\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  return (\n    <div className='form-control'>\n      <input\n        type='file'\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        name=''\n        id={props.id}\n        accept='.jpg, .png, .jpeg'\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className='image-upload__preview'>\n          {previewUrl && <img src={previewUrl} alt='Preview' />}\n          {!previewUrl && <p>Pleace pick an image.</p>}\n        </div>\n        <Button type='button' onClick={pickImageHandler}>\n          PiCK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["NewPlace","navigate","useNavigate","formState","inputHandler","useForm","title","value","isValid","description","address","image","sendRequest","isLoading","error","clearError","useHttpClient","token","useContext","AuthContext","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","className","onSubmit","async","event","preventDefault","formData","FormData","append","inputs","concat","process","Authorization","err","console","log","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","UpdatePlace","loadedPlace","setLoadedPlace","useState","placeId","useParams","userId","setFormData","useEffect","place","fetchPlace","JSON","stringify","initialValue","initialValid","Card","props","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteWorningHandler","Modal","show","onCancel","header","contentClass","footerClass","footer","onClick","Map","style","background","center","coordinates","zoom","inverse","danger","onDelete","src","alt","openMapHandler","creatorId","to","showDeleteWorningHandler","items","length","map","PlaceItem","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","places","filter","fetchPlaces","PlaceList","deletedPlaceId","prevPlaces","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","name","accept","pickedFile","fileIsValid","files","pickImageHandler","current","click","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}